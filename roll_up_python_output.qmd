---
title: "Roll Up of Python Data"
format: html
editor: source
---

# Import All Long Data 

```{r}
# note that measured_data_long.csv is created by a python script `v3d_import.py`
library(readxl)
library(tidyverse)
RAW_OUTPUT_FOLDER <- "C:\\Users\\Mac Prible\\OneDrive - The University of Texas at Austin\\research\\PDSV\\data\\PDVS_2024\\v3d"

participant_count <- 3
# Create an empty list to store individual data tables
data_list <- list()


for (i in 1:participant_count) {
  print(paste0("Processing output for participant ", i))
  measured_data_long <- read.csv(paste0(RAW_OUTPUT_FOLDER,"\\", "S",i,"_measured_data_long.csv"))
  data_list[[i]] <- measured_data_long
}

all_data_long <- bind_rows(data_list)

rm(list=setdiff(ls(), "all_data_long"))
```


# Average normalized variables and Clean Up

Averages across relevant stance phases. Rename variables so that they are in terms of "ipsilateral" and "contralateral" to ease downstream processing.

```{r}
all_normalized_stance_data <- all_data_long %>% 
  ungroup() %>% 
  # select(-MaxSpeedDiff) %>% 
  mutate(Participant = parse_number(Participant)) %>% 
  group_by(Condition, Side, Participant, StartStop, Period, ConditionOrder, VariableAxis, NormalizedTimeStep) %>% 
  summarize(AverageValue = mean(Value, na.rm=TRUE)) %>% 
  separate(VariableAxis, into = c("Variable", "Axis"), sep = "_(?=[^_]+$)", extra = "merge") %>% 
  mutate(Variable = case_when(
    Variable == "RHEEL" ~ "R_HEEL",
    Variable == "LHEEL" ~ "L_HEEL",
    Variable == "FP1" ~ "Left_GRF",
    Variable == "FP2" ~ "Right_GRF",
    TRUE ~ Variable  # This keeps all other values unchanged
  )) %>% 
    mutate(NewVariable = case_when(
    Side == "left" & grepl("^(L_|Left)", Variable) ~ sub("^(L_|Left_|Left)", "IPSI_", Variable),
    Side == "right" & grepl("^(R_|Right)", Variable) ~ sub("^(R_|Right_|Right)", "IPSI_", Variable),
    Side == "right" & grepl("^(L_|Left)", Variable) ~ sub("^(L_|Left_|Left)", "CONTRA_", Variable),
    Side == "left" & grepl("^(R_|Right)", Variable) ~ sub("^(R_|Right_|Right)", "CONTRA_", Variable),
    TRUE ~ Variable # Keeps all other values unchanged
  ))  %>% 
  mutate(Aim = case_when(
    Condition == "sbt" ~ 1,
    Condition == "ubp" ~ 1,
    Condition == "upp" ~ 1,
    Condition == "bbp" ~ 2,
    Condition == "bpp" ~ 2
  )) %>% 
  mutate(Condition = case_when(
    Condition == "sbt" ~ "cSBT",
    Condition == "ubp" ~ "U. FastBrake",
    Condition == "upp" ~ "U. FastProp",
    Condition == "bbp" ~ "B. FastBrake",
    Condition == "bpp" ~ "B. FastProp"
  )) 


# rm(list=setdiff(ls(), "all_normalized_stance_data"))
```


# Unilateral PDSV Impact on Ankle PF

```{r }
figure_participant <- 1

all_normalized_stance_data %>% 
  mutate(Condition = case_when(
    Condition == "cSBT" ~ "cSBT",
    Condition == "U. FastBrake" ~ "FastBrake",
    Condition == "U. FastProp" ~ "FastProp",
    TRUE ~ Condition
  )) %>%  
  filter(Participant == figure_participant) %>%  
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Aim==1) %>% 
  filter(Axis %in% c("X")) %>% 
  # filter(NewVariable == "HEEL_DISTANCE") %>% 
  filter(NewVariable == "IPSI_ANKLE_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition), scales = "free_y")+
  theme_minimal()+
  theme(legend.position = "bottom",
        plot.caption = element_text(hjust = 0.5, size=13)) +  # Center-justify the caption
  labs(title = paste0("Figure 4: Ankle Torque Profile Before and After 6 Minutes of Adaptation") ,
       subtitle = paste0("Subject ", figure_participant, " across all 3 conditions of Aim 1"),
       # caption = str_wrap("Ankle torque on the left (altered) side is decreased following cSBT and FastBrake, but increases following adaptation to FastProp", width = 80),
       x = "% stance",
       y = "Torque (N.m/BW)",
       )

```


# Bilateral PDSV Impact on Ankle PF

```{r}
figure_participant <- 1

all_normalized_stance_data %>% 
  filter(Participant == figure_participant) %>%  
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Aim==2) %>% 
  filter(Axis %in% c("X")) %>% 
  filter(NewVariable == "IPSI_ANKLE_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition), scales = "free_y")+
  theme_minimal()+
  theme(legend.position = "bottom")+
  labs(x="% Stance",
       y = "Torque (N.m/BW)")
```

# Get Normalized Stance Time

```{r}

stance_times <-all_normalized_stance_data %>% 
  ungroup() %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("TIME")) %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>%
  group_by(Aim, Participant, Condition, Period, Side) %>% 
  summarize(min = min(AverageValue), max = max(AverageValue)) %>%
  mutate(stance_time = max-min)

PF_impulse_time_normalized <- all_normalized_stance_data %>% 
  ungroup() %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("IPSI_ANKLE_MOMENT")) %>% 
  filter(AverageValue < 0) %>%  # interested in PF not DF
  filter(Period %in% c("Baseline", "PostAdapt")) %>%
  group_by(Aim, Participant, Condition, Period, Side) %>% 
  summarize(PF_impulse_time_norm = sum(AverageValue/100))

PF_impulse_by_condition_participant <-stance_times %>% left_join(PF_impulse_time_normalized) %>% 
  ungroup() %>% 
  mutate(PF_impulse_BW_normalized =  PF_impulse_time_norm * stance_time) %>% 
  # filter(Side=="left") %>% 
  # select(Aim, Participant,Side, Condition, Period, PF_impulse_BW_normalized) %>% view()
  mutate(PF_impulse_time_normalized=abs(PF_impulse_BW_normalized)) %>% 
  pivot_wider(id_cols=c(Aim, Participant, Side, Condition), values_from = PF_impulse_time_normalized, names_from = Period) %>% 
  mutate(pct_change = (PostAdapt-Baseline)/Baseline)


```
# Changes in stance times

```{r}

stance_times %>% 
  filter(Aim==1) %>% 
  ggplot(aes(x = Period, y = stance_time, color=factor(Participant), group=Participant))+
  geom_point()+
  geom_line()+
  facet_grid(cols=vars(Side), rows = vars(Condition))

```



# Plot PF Impulse

```{r}

PF_impulse_plot_data <- PF_impulse_by_condition_participant %>%
  pivot_longer(cols = c(Baseline, PostAdapt), names_to = "Period", values_to = "PF_Impulse")


ggplot(PF_impulse_plot_data %>% 
         filter(Aim==1) %>% 
         filter(Side=="left"), 
       aes(x = Period, y = PF_Impulse, color = factor(Participant), group = Participant)) +
  geom_point(size = 3) +
  geom_line() +
  facet_grid(cols=vars(Condition)) +
  labs(x = "Period", y = "Left PF Impulse (N.m.s/BW)", title = "Aim 1: Left PF Impulse by Period and Condition", color = "Participant") +
  theme_minimal() +
  theme(legend.position = "bottom")

bilateral_PF_impulse_plot_data <- PF_impulse_plot_data %>%
  ungroup() %>% 
  filter(Aim==2) %>% 
  group_by(Participant, Condition, Period) %>% 
  summarize(PF_Impulse = mean(PF_Impulse))
  

ggplot(bilateral_PF_impulse_plot_data  , 
       aes(x = Period, y = PF_Impulse, color = factor(Participant), group = Participant)) +
  geom_point(size = 3) +
  geom_line() +
  facet_grid(cols=vars(Condition)) +
  labs(x = "Period", y = "Average PF Impulse (N.m.s/BW)", title = "Aim 2: Mean PF Impulse by Period and Condition", color = "Participant") +
  theme_minimal() +
  theme(legend.position = "bottom")



```

# SLR change across periods by condition

```{r}


all_normalized_stance_data %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("HEEL_DISTANCE")) %>% 
  filter(Period %in% c("PostAdapt")) %>% 
  filter(Aim==1) %>% 
  mutate(StepLength = abs(AverageValue)) %>% 
  select(-c(StartStop, Axis, ConditionOrder, Variable, NewVariable, NormalizedTimeStep,AverageValue)) %>% 
  pivot_wider(names_from = Side, values_from = StepLength) %>% 
  mutate(SLR = left/right)

all_normalized_stance_data %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("HEEL_DISTANCE")) %>% 
  filter(Aim == 1) %>% 
  # filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  mutate(StepLength = abs(AverageValue)) %>% 
  select(-c(StartStop, Axis, ConditionOrder, Variable, NewVariable, NormalizedTimeStep,AverageValue)) %>% 
  pivot_wider(names_from = Side, values_from = StepLength) %>% 
  mutate(SLR = left/right) %>% 
  ggplot(aes(x=Period, y = SLR, group = Participant, color=factor(Participant)))+
  geom_point()+
  geom_line()+
  geom_hline(yintercept =1, linetype="dashed")+
  facet_grid(cols=vars(Condition))+
  theme_minimal()+
  theme(plot.title = element_text(hjust = 0.5,),
        plot.caption = element_text(hjust = 0.5, size = 13),
        legend.position = "bottom")+
  labs(title = "Figure 3: SLR Across Treadmill Protocol",
       subtitle = "")
  
all_normalized_stance_data %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("HEEL_DISTANCE")) %>% 
  filter(Aim == 1) %>% 
  filter(Participant ==1) %>% 
  # filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  mutate(StepLength = abs(AverageValue)) %>% 
  select(-c(StartStop, Axis, ConditionOrder, Variable, NewVariable, NormalizedTimeStep,AverageValue)) %>% 
  pivot_wider(names_from = Side, values_from = StepLength) %>% 
  mutate(SLR = left/right) %>% 
  ggplot(aes(x=Period, y = SLR,  color=Condition, group = Condition))+
  geom_point()+
  geom_line()+
  geom_hline(yintercept =1, linetype="dashed")+
  # facet_grid(cols=vars(Condition))+
  theme_minimal()+
  theme(plot.caption = element_text(hjust = 0.5, size = 13),
        legend.position = "bottom")+
  labs(title = "Figure 3: SLR Across Treadmill Protocol",
       subtitle = "Subject 1")
```

# step Length in a body frame of reference

Reviewing this calculations I think there are some problems with the way I went about it. Definitely want to go over these calcs with a fine-toothed comb.


```{r}
all_normalized_stance_data %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  filter(Aim == 2) %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  # separate(VariableAxis, into = c("Variable", "Axis"), sep = "_(?=[^_]+$)", extra = "merge") %>% 
  filter(Axis == "Y") %>% 
  filter(NewVariable %in% c("IPSI_HEEL", "CONTRA_HEEL", "PELVIS_COM")) %>% 
  select(-c(Axis, NormalizedTimeStep,StartStop, Variable, ConditionOrder)) %>% 
  pivot_wider(names_from = NewVariable, values_from = AverageValue) %>% 
  mutate(AnteriorStep = -(IPSI_HEEL-PELVIS_COM),
         PosteriorStep = CONTRA_HEEL-PELVIS_COM,
         Step = -(IPSI_HEEL - CONTRA_HEEL)) %>% 
  select(-c(PELVIS_COM, CONTRA_HEEL, IPSI_HEEL)) %>% 
  group_by(Condition, Participant,Period) %>% 
  summarise(AnteriorStep = mean(AnteriorStep),
            PosteriorStep = mean(PosteriorStep),
            Step = mean(Step)) %>% 
  pivot_longer(cols = c(AnteriorStep, PosteriorStep, Step)) %>% 
  ungroup() %>% 
  ggplot(aes(x=Period, y = value, color = factor(Participant), group = Participant))+
  geom_point()+
  geom_line()+
  theme_minimal()+
  theme(legend.position = "bottom")+
  labs(y = "Length (m)")+
  facet_grid(rows=vars(Condition), cols = vars(name))

```

```{r}
all_normalized_stance_data %>% 
  filter(Condition %in% c(
                          "cSBT",
                          "U. FastBrake",
                          "U. FastProp"
                          )) %>% 
  filter(Participant==1) %>% 
  filter(Period %in% c("Late Adapt")) %>%
  filter(NewVariable == "IPSI_BeltSpeed") %>% 
  mutate(Condition = factor(Condition, levels = c("cSBT", "U. FastBrake", "U. FastProp", "B. FastBrake", "B. FastProp"))) %>% 
  mutate(Condition = case_when(
            Condition == "U. FastBrake" ~ "FastBrake",
            Condition == "U. FastProp" ~ "FastProp",
            TRUE ~ Condition)
  ) %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Side))+
  geom_line()+
  facet_grid(cols = vars(Participant, Side), rows = vars(Condition))+
  theme_minimal()+
  theme( legend.position = "none",
        strip.text.y = element_text( angle=0))+
  labs(title = "Figure 2: Belt Speed Across Stance Phase By Condition",
       subtitle = "Recorded belt speeds of Subject 1",
       x = "% Stance",
       y = "Belt Speed (m/s)",
  ) +
  scale_color_manual(values=c("left"="blue", "right"="red"))

all_normalized_stance_data %>% 
  mutate(Condition = case_when(
            Condition == "U. FastBrake" ~ "FastBrake",
            Condition == "U. FastProp" ~ "FastProp",
            TRUE ~ Condition)
  ) %>% 
  filter(Condition %in% c(
                          "cSBT",
                          "FastBrake",
                          "FastProp"
                          )) %>% 
  filter(Participant==1) %>% 
  filter(Period %in% c("Late Adapt")) %>%
  filter(Axis == "Z") %>% 
  filter(Variable %in% c("Right_GRF", "Left_GRF")) %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, group = Variable, color = Variable))+
  geom_line()+
  facet_grid(cols = vars(Participant,Side), rows = vars( Condition))+
  theme_minimal() +
  theme( legend.position = "none",
        strip.text.y = element_text( angle=0)) + 
  labs(title = "Vertical GRF Across Stance Phase By Condition",
       # subtitle = "Adaptation Belt Speeds for Aims 1 and 2",
       x = "% Stance",
       y = "VGRF (N)",
  ) +
  scale_color_manual(values=c("Left_GRF"="blue", "Right_GRF"="red"))
```

