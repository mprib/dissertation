---
title: "S1_EDA"
format: html
editor: source
---

# Import Long Data

```{r}
# note that measured_data_long.csv is created by a python script `v3d_import.py`
library(readxl)
library(tidyverse)
RAW_OUTPUT_FOLDER <- "C:\\Users\\Mac Prible\\OneDrive - The University of Texas at Austin\\research\\PDSV\\data\\PDVS_2024\\v3d"
measured_data_long <- read.csv(paste0(RAW_OUTPUT_FOLDER,"\\", "S3_measured_data_long.csv"))
```

# Average normalized variables and Clean Up

Averages across relevant stance phases.

```{r}
mean_stance_data <-measured_data_long %>% 
  ungroup() %>% 
  select(-MaxSpeedDiff) %>% 
  group_by(Condition, Side, Participant, StartStop, Period, ConditionOrder, VariableAxis, NormalizedTimeStep) %>% 
  summarize(AverageValue = mean(Value, na.rm=TRUE)) %>% 
  separate(VariableAxis, into = c("Variable", "Axis"), sep = "_(?=[^_]+$)", extra = "merge") %>% 
  mutate(Variable = case_when(
    Variable == "RHEEL" ~ "R_HEEL",
    Variable == "LHEEL" ~ "L_HEEL",
    Variable == "FP1" ~ "Left_GRF",
    Variable == "FP2" ~ "Right_GRF",
    TRUE ~ Variable  # This keeps all other values unchanged
  )) %>% 
    mutate(NewVariable = case_when(
    Side == "left" & grepl("^(L_|Left)", Variable) ~ sub("^(L_|Left_|Left)", "IPSI_", Variable),
    Side == "right" & grepl("^(R_|Right)", Variable) ~ sub("^(R_|Right_|Right)", "IPSI_", Variable),
    Side == "right" & grepl("^(L_|Left)", Variable) ~ sub("^(L_|Left_|Left)", "CONTRA_", Variable),
    Side == "left" & grepl("^(R_|Right)", Variable) ~ sub("^(R_|Right_|Right)", "CONTRA_", Variable),
    TRUE ~ Variable # Keeps all other values unchanged
  ))


# rm(measured_data_long)
```

# Set Ipsi/Contra Language

```{r}
# get list of variable names
mean_stance_data %>% 
  ungroup() %>% 
  select(NewVariable, Side, Variable) %>% 
  group_by(NewVariable, Side) %>% 
  summarize(NewVariable = first(NewVariable),
            OriginalVariable = first(Variable))
```

```{r}

mean_stance_data %>% 
  group_by(Period) %>% 
  summarize(Period = first(Period))

mean_stance_data %>% 
  group_by(NewVariable) %>% 
  summarize(NewVariable = first(NewVariable))

```

# Unilateral PDSV Impact on Ankle PF

```{r }
mean_stance_data %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Condition %in% c("sbt", "ubp", "upp")) %>% 
  mutate(Condition = case_when(
    Condition == "sbt" ~ "cSBT",
    Condition == "ubp" ~ "FastBrake",
    Condition == "upp" ~ "FastProp"
  )) %>% 
  filter(Axis %in% c("X")) %>% 
  # filter(NewVariable == "HEEL_DISTANCE") %>% 
  filter(NewVariable == "IPSI_ANKLE_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition), scales = "free_y")+
  theme_minimal()+
  theme(legend.position = "bottom",
        plot.caption = element_text(hjust = 0.5, size=13)) +  # Center-justify the caption
  labs(title = "Subject 1: Ankle Torque Profile Before and After 6 Minutes of Adaptation" ,
       subtitle = "Tested Conditions: cSBT, FastBrake, FastProp",
       caption = str_wrap("Ankle torque on the left (altered) side is decreased following cSBT and FastBrake, but increases following adaptation to FastProp", width = 80),
       x = "% stance",
       y = "Torque (N.m/BW)",
       )

```


# Unilateral PDSV Impact of Hip Torque
```{r }
mean_stance_data %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Condition %in% c("sbt", "ubp", "upp")) %>% 
  mutate(Condition = case_when(
    Condition == "sbt" ~ "cSBT",
    Condition == "ubp" ~ "FastBrake",
    Condition == "upp" ~ "FastProp"
  )) %>% 
  filter(Axis %in% c("X")) %>% 
  # filter(NewVariable == "HEEL_DISTANCE") %>% 
  filter(NewVariable == "IPSI_HIP_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition), scales = "free_y")+
  theme_minimal()+
  theme(legend.position = "bottom",
        plot.caption = element_text(hjust = 0.5, size=13)) +  # Center-justify the caption
  labs(title = "Subject 1: Hip Torque Profile Before and After 6 Minutes of Adaptation" ,
       subtitle = "Tested Conditions: cSBT, FastBrake, FastProp",
       x = "% stance",
       y = "Torque (N.m/BW)",
       )

```
# Bilateral PDSV Impact on Ankle PF

```{r}

mean_stance_data %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Condition %in% c("bbp", "bpp")) %>% 
  mutate(Condition = case_when(
    Condition == "bbp" ~ "Bilateral FastBrake",
    Condition == "bpp" ~ "Bilateral FastProp"
  )) %>% 
  filter(Axis %in% c("X")) %>% 
  filter(NewVariable == "IPSI_ANKLE_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition), scales = "free_y")+
  theme_minimal()+
  theme(legend.position = "bottom")+
  labs(x="% Stance",
       y = "Torque (N.m/BW)")
mean_stance_data %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Condition %in% c("bbp", "bpp")) %>%
  mutate(Condition = case_when(
    Condition == "bbp" ~ "Bilateral FastBrake",
    Condition == "bpp" ~ "Bilateral FastProp"
  )) %>% 
  filter(Axis %in% c("X")) %>% 
  filter(NewVariable == "IPSI_KNEE_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition))+
  theme_minimal()+
  theme(legend.position = "bottom")+
  labs(x="% Stance",
       y = "Torque (N.m/BW)")

mean_stance_data %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>% 
  filter(Condition %in% c("bbp", "bpp")) %>%
  mutate(Condition = case_when(
    Condition == "bbp" ~ "Bilateral FastBrake",
    Condition == "bpp" ~ "Bilateral FastProp"
  )) %>% 
  filter(Axis %in% c("X")) %>% 
  filter(NewVariable == "IPSI_HIP_MOMENT") %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition))+
  theme_minimal()+
  theme(legend.position = "bottom")+
  labs(x="% Stance",
       y = "Torque (N.m/BW)")
```

# Get Normalized Stance Time

```{r}

stance_times <-mean_stance_data %>% 
  ungroup() %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("TIME")) %>% 
  filter(Period %in% c("Baseline", "PostAdapt")) %>%
  group_by(Condition, Period, Side) %>% 
  summarize(min = min(AverageValue), max = max(AverageValue)) %>%
  mutate(stance_time = max-min)

PF_impulse_time_normalized <- mean_stance_data %>% 
  ungroup() %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("IPSI_ANKLE_MOMENT")) %>% 
  filter(AverageValue < 0) %>%  # interested in PF not DF
  filter(Period %in% c("Baseline", "PostAdapt")) %>%
  group_by(Condition, Period, Side) %>% 
  summarize(PF_impulse_time_norm = sum(AverageValue/100))

stance_times %>% left_join(PF_impulse_time_normalized) %>% 
  ungroup() %>% 
  mutate(PF_impulse_BW_normalized =  PF_impulse_time_norm * stance_time) %>% 
  filter(Side=="left") %>% 
  select(Condition, Period, PF_impulse_BW_normalized) %>% 
  mutate(PF_impulse_time_normalized=abs(PF_impulse_BW_normalized)) %>% 
  pivot_wider(id_cols=Condition, values_from = PF_impulse_time_normalized, names_from = Period) %>% 
  mutate(pct_change = (PostAdapt-Baseline)/Baseline)
```

# SLR change across periods by condition

```{r}


mean_stance_data %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("HEEL_DISTANCE")) %>% 
  filter(Period %in% c("PostAdapt")) %>% 
  filter(Condition %in% c("sbt", "ubp", "upp")) %>% 
  mutate(Condition = case_when(
    Condition == "sbt" ~ "cSBT",
    Condition == "ubp" ~ "FastBrake",
    Condition == "upp" ~ "FastProp"
  )) %>% 
  mutate(StepLength = abs(AverageValue)) %>% 
  select(-c(StartStop, Axis, ConditionOrder, Variable, NewVariable, NormalizedTimeStep,AverageValue)) %>% 
  pivot_wider(names_from = Side, values_from = StepLength) %>% 
  mutate(SLR = left/right)

mean_stance_data %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  filter(Axis == "X") %>% 
  filter(NewVariable %in% c("HEEL_DISTANCE")) %>% 
  filter(Condition %in% c("sbt", "ubp", "upp")) %>% 
  mutate(Condition = case_when(
    Condition == "sbt" ~ "cSBT",
    Condition == "ubp" ~ "FastBrake",
    Condition == "upp" ~ "FastProp"
  )) %>% 
  mutate(StepLength = abs(AverageValue)) %>% 
  select(-c(StartStop, Axis, ConditionOrder, Variable, NewVariable, NormalizedTimeStep,AverageValue)) %>% 
  pivot_wider(names_from = Side, values_from = StepLength) %>% 
  mutate(SLR = left/right) %>% 
  ggplot(aes(x=Period, y = SLR, group = Condition, color = Condition))+
  geom_point()+
  geom_line()+
  theme_minimal()+
  theme(plot.title = element_text(hjust = 0.5,),
        plot.caption = element_text(hjust = 0.5, size = 13),
        legend.position = "bottom")+
  labs(title = "Subject 1: SLR Across Treadmill Protocol",
       caption = str_wrap("Ratio of left step length (altered belt speed side) to right step length (non altered belt speed side). Step Length Ratio (SLR) undergoes similar alterations during adaptation and post adaptation across each of the conditions of Aim 2", width = 80))
  
```

# step Length in a body frame of reference

Reviewing this calculations I think there are some problems with the way I went about it. Definitely want to go over these calcs with a fine-toothed comb.


```{r}
measured_data_long %>% 
  ungroup() %>% 
  filter(NormalizedTimeStep==1) %>% 
  # filter(Condition %in% c("sbt", "ubp", "upp")) %>%
  filter(Condition %in% c("bbp", "bpp")) %>%
  filter(Period %in% c("Baseline", "PostAdapt")) %>%
  separate(VariableAxis, into = c("Variable", "Axis"), sep = "_(?=[^_]+$)", extra = "merge") %>% 
  filter(Axis == "Y") %>% 
  filter(Variable %in% c("RHEEL", "LHEEL", "PELVIS_COM")) %>% 
  mutate(Variable = case_when(
    Variable == "RHEEL" ~ "R_HEEL",
    Variable == "LHEEL" ~ "L_HEEL",
    TRUE ~ Variable  # This keeps all other values unchanged
  )) %>% 
    mutate(NewVariable = case_when(
    Side == "left" & grepl("^(L_|Left)", Variable) ~ sub("^(L_|Left_|Left)", "IPSI_", Variable),
    Side == "right" & grepl("^(R_|Right)", Variable) ~ sub("^(R_|Right_|Right)", "IPSI_", Variable),
    Side == "right" & grepl("^(L_|Left)", Variable) ~ sub("^(L_|Left_|Left)", "CONTRA_", Variable),
    Side == "left" & grepl("^(R_|Right)", Variable) ~ sub("^(R_|Right_|Right)", "CONTRA_", Variable),
    TRUE ~ Variable # Keeps all other values unchanged
  )) %>% 
  select(-c(Axis, NormalizedTimeStep,StartStop, Variable, MaxSpeedDiff, ConditionOrder)) %>% 
  pivot_wider(names_from = NewVariable, values_from = Value) %>% 
  mutate(AnteriorStep = -(IPSI_HEEL-PELVIS_COM),
         PosteriorStep = CONTRA_HEEL-PELVIS_COM,
         Step = -(IPSI_HEEL - CONTRA_HEEL)) %>% 
  select(-c(PELVIS_COM, CONTRA_HEEL, IPSI_HEEL)) %>% 
  group_by(Condition, Side, Participant,Period) %>% 
  summarise(AnteriorStep = mean(AnteriorStep),
            PosteriorStep = mean(PosteriorStep),
            Step = mean(Step)) %>% 
  pivot_longer(cols = c(AnteriorStep, PosteriorStep, Step)) %>% 
  ungroup() %>% 
  ggplot(aes(x=Period, y = value, 
             color = Condition,
             group = Condition))+
  geom_point()+
  geom_line()+
  facet_grid(cols=vars(Side), rows = vars(name))

```

```{r}


mean_stance_data %>% 
  filter(Period %in% c("Late Adapt")) %>%
  # filter(Period %in% c("Early Adapt")) %>%
  # filter(Period %in% c("PostAdapt")) %>% 
  # filter(Condition %in% c("sbt", "ubp", "upp")) %>% 
  # filter(NewVariable == "HEEL_DISTANCE") %>% 
  filter(NewVariable == "IPSI_BeltSpeed") %>% 
  mutate(Condition = case_when(
    Condition == "sbt" ~ "cSBT",
    Condition == "ubp" ~ "U. FastBrake",
    Condition == "upp" ~ "U. FastProp",
    Condition == "bbp" ~ "B. FastBrake",
    Condition == "bpp" ~ "B. FastProp"
  )) %>% 
  mutate(Condition = factor(Condition, levels = c("cSBT", "U. FastBrake", "U. FastProp", "B. FastBrake", "B. FastProp"))) %>% 
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, color=Period))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Condition))+
  theme_minimal()+
  theme( legend.position = "none",
        plot.caption = element_text(hjust = 0, size = 13),
        strip.text.y = element_text( angle=0))+
  labs(title = "Belt Speed Across Stance Phase By Condition",
       subtitle = "Adaptation Belt Speeds for Aims 1 and 2",
       x = "% Stance",
       y = "Belt Speed (m/s)",
       caption = str_wrap("Actual belt speed captured using retroreflective markers attached to the belt. Speed change triggered when leading limb vertical GRF exceeds trailing limb vertical GRF. Belt acceleration capped at 3 m/(s^2).", width = 80))

mean_stance_data %>% 
  filter(Period %in% c("Late Adapt")) %>%
  # filter(Period %in% c("PostAdapt")) %>% 
  # filter(Condition %in% c("sbt", "ubp", "upp")) %>% 
  filter(Axis == "Z") %>% 
  # filter(NewVariable == "HEEL_DISTANCE") %>% 
  filter(NewVariable %in% c("IPSI_GRF", "CONTRA_GRF")) %>% 
  
  ggplot(aes(x=NormalizedTimeStep, y = AverageValue, group = NewVariable, color = NewVariable))+
  geom_line()+
  facet_grid(cols = vars(Side), rows = vars(Axis, Condition))+
  theme_minimal()
```

